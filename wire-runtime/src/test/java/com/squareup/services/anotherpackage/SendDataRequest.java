// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: ../wire-runtime/src/test/proto/request_response.proto
package com.squareup.services.anotherpackage;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;
import java.lang.Object;
import java.lang.Override;
import okio.ByteString;

public final class SendDataRequest extends Message {
  private static final long serialVersionUID = 0L;

  public static final ByteString DEFAULT_DATA = ByteString.EMPTY;

  @ProtoField(
      tag = 1,
      type = Message.Datatype.BYTES
  )
  public final ByteString data;

  public SendDataRequest(ByteString data) {
    this.data = data;
  }

  private SendDataRequest(Builder builder) {
    this(builder.data);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof SendDataRequest)) return false;
    return equals(data, ((SendDataRequest) other).data);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    return result != 0 ? result : (hashCode = data != null ? data.hashCode() : 0);
  }

  @Override
  public int size() {
    int size = this.size;
    if (size == -1) {
      size = unknownFieldsSize()
          + (data != null ? sizeOfBytes(1, data) : 0);
    }
    this.size = size;
    return size;
  }

  public static final class Builder extends com.squareup.wire.Message.Builder<SendDataRequest> {
    public ByteString data;

    public Builder() {
    }

    public Builder(SendDataRequest message) {
      super(message);
      if (message == null) return;
      this.data = message.data;
    }

    public Builder data(ByteString data) {
      this.data = data;
      return this;
    }

    @Override
    public SendDataRequest build() {
      return new SendDataRequest(this);
    }
  }
}
